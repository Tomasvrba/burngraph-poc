// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class newProposalIssued extends EthereumEvent {
  get params(): newProposalIssued__Params {
    return new newProposalIssued__Params(this);
  }
}

export class newProposalIssued__Params {
  _event: newProposalIssued;

  constructor(event: newProposalIssued) {
    this._event = event;
  }

  get issuer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deadline(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get data(): string {
    return this._event.parameters[3].value.toString();
  }

  get optionA(): string {
    return this._event.parameters[4].value.toString();
  }

  get optionAaddr(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get optionB(): string {
    return this._event.parameters[6].value.toString();
  }

  get optionBaddr(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class VoteProposalPool extends SmartContract {
  static bind(address: Address): VoteProposalPool {
    return new VoteProposalPool("VoteProposalPool", address);
  }
}

export class NewVoteProposalCall extends EthereumCall {
  get inputs(): NewVoteProposalCall__Inputs {
    return new NewVoteProposalCall__Inputs(this);
  }

  get outputs(): NewVoteProposalCall__Outputs {
    return new NewVoteProposalCall__Outputs(this);
  }
}

export class NewVoteProposalCall__Inputs {
  _call: NewVoteProposalCall;

  constructor(call: NewVoteProposalCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _data(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class NewVoteProposalCall__Outputs {
  _call: NewVoteProposalCall;

  constructor(call: NewVoteProposalCall) {
    this._call = call;
  }

  get newProposal(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
